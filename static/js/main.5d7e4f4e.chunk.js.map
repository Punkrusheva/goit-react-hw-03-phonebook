{"version":3,"sources":["components/ContactFilter/ContactFilter.module.css","components/Layout/Layout.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Layout/Layout.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","components/App.js","index.js"],"names":["module","exports","Layout","children","className","styles","layout","defaultProps","title","ContactList","contacts","onRemoveContact","contactList","map","name","id","number","item","type","onClick","button","actions","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","box","this","htmlFor","onChange","input","placeholder","Component","ContactFilter","label","App","filter","formSubmitHandler","localStorage","getItem","contactId","contact","find","alert","console","log","prevState","changeFilter","removeContact","getVisibleContacts","normalizedFilter","toLowerCase","trim","includes","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5d7e4f4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__1fCk8\",\"label\":\"ContactFilter_label__27YGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3aEWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3H7GF\",\"name\":\"ContactList_name__1ct_i\",\"item\":\"ContactList_item__1XZqF\",\"button\":\"ContactList_button__3KqAb\",\"number\":\"ContactList_number__23GQ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactForm_box__2hD3M\",\"input\":\"ContactForm_input__3uOef\",\"button\":\"ContactForm_button__2zjzf\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Layout.module.css';\r\n\r\nfunction Layout({ children}) {\r\n    return (\r\n            <div className={styles.layout} >\r\n                <h1> </h1>\r\n                {children}\r\n            </div>)\r\n}\r\n\r\nLayout.defaultProps = {\r\n  title: '',\r\n  children: '',\r\n};\r\n\r\nLayout.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onRemoveContact }) {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {\r\n        contacts.map(({ name, id, number}) => (\r\n          <li key={id} className={styles.item}>\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.number}>{number}</p>\r\n            <button\r\n              type='button'\r\n              onClick={() => onRemoveContact(id)}\r\n              className={styles.button}>\r\n              Delete\r\n            </button>\r\n            <section className={styles.actions}>\r\n            </section>\r\n          </li>\r\n        ))\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.defaultProps = {\r\n  number: '',\r\n  name: '',\r\n  id: ''\r\n};\r\n\r\nContactList.propTypes = {\r\n  number: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id : PropTypes.string\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n \r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n   \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n    \r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n      <form className={styles.box} onSubmit={this.handleSubmit} >\r\n        <label htmlFor={this.nameInputId} className={styles.name}>\r\n          Name\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            id={this.nameInputId}\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n            placeholder='Enter contact name' />\r\n        </label>\r\n        <label htmlFor={this.numberInputId} className={styles.number}>\r\n          Number\r\n          <input\r\n            type='text'\r\n            name='number'\r\n            id={this.numberInputId}\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n            placeholder='Enter contact number' />\r\n        </label>\r\n        <button type='submit' className={styles.button}>\r\n          Add contact\r\n            </button>\r\n        </form>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\n//import shortid from 'shortid';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, onChange }) => (\r\n    <>\r\n        <h2>Contacts</h2>\r\n        <label\r\n            className={styles.label}>\r\n            Find contacts by name\r\n          <input\r\n                type='text'\r\n                value={value}\r\n                onChange={onChange}\r\n                name='filter'\r\n                className={styles.input}\r\n                placeholder='Enter contact name'\r\n            />\r\n        </label>\r\n    </>\r\n);\r\n\r\nexport default ContactFilter;","import React, { Component } from 'react';\nimport Layout from './Layout/Layout';\nimport ContactList from './ContactList/ContactList'\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactFilter from './ContactFilter/ContactFilter';\nimport shortid from 'shortid';\n\nexport default class App extends Component {\n  state = {\n    filter: '',\n    contacts: [\n     // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n     // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n     // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n     // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ]\n  }\n \n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    this.props.onChange(this.state);\n  };\n  \n  formSubmitHandler = ({ name, number }) => {\n    localStorage.getItem('contacts');\n    this.contactId = shortid.generate();\n    const contact = {\n      id: this.contactId,\n      name,\n      number,\n    };\n    if (contact.name !== '') {\n      if (this.state.contacts.find(contact => contact.name === name))\n      { alert(`${contact.name} is already in contacts`); }\n      else {\n        console.log(this.state.contacts);\n        this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, contact],\n          }\n        });\n      };\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts});\n    }\n}\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n      }\n}\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n   \n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n  \n  render() {\n    const { contacts, filter } = this.state;\n    \n    const visibleContacts = this.getVisibleContacts();\n\n\n    return (\n        <Layout >\n          <ContactForm\n            onSubmit={this.formSubmitHandler}\n         />\n\n          {contacts.length > 0 &&\n            <>\n            <ContactFilter\n              onChange={this.changeFilter}\n              value={filter}>\n            </ContactFilter>  \n          \n            <ContactList\n              onRemoveContact={this.removeContact}\n              contacts={visibleContacts} />\n            </>}\n        </Layout>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/main.css';\nimport \"./stylesheets/normalize.css\";\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}